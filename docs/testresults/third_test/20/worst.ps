%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%Title: Window .50666656L
%%CreationDate: Sun Nov 30 23:35:43 2014
%%BoundingBox: -70 19 683 773
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/Euro/space/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
/circumflex/perthousand/Scaron/guilsinglleft/OE/space/Zcaron/space
/space/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
/tilde/trademark/scaron/guilsinglright/oe/space/zcaron/Ydieresis
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Helvetica
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.75 0.75 scale
-502 -502 translate
0 1004 moveto 1004 1004 lineto 1004 0 lineto 0 0 lineto closepath clip newpath
gsave
296.875 991.5 moveto 506.25 0 rlineto 0 -675 rlineto -506.25 0 rlineto closepath
1.000 1.000 1.000 setrgbcolor AdjustColor
fill
296.875 991.5 moveto 506.25 0 rlineto 0 -675 rlineto -506.25 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
440.3125 729.9375 moveto
440.3125 774.234375 lineto
486.71875 774.234375 lineto
486.71875 729.9375 lineto
440.3125 729.9375 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
462.3125 752.9375 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
512.03125 430.40625 moveto
512.03125 474.703125 lineto
558.4375 474.703125 lineto
558.4375 430.40625 lineto
512.03125 430.40625 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
534.03125 453.40625 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
372.8125 472.59375 moveto
372.8125 516.890625 lineto
419.21875 516.890625 lineto
419.21875 472.59375 lineto
372.8125 472.59375 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
394.8125 495.59375 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
739.84375 565.40625 moveto
739.84375 597.046875 lineto
782.03125 597.046875 lineto
782.03125 565.40625 lineto
739.84375 565.40625 lineto
0.000 0.000 1.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
758.84375 582.40625 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
604.84375 375.5625 moveto
604.84375 407.203125 lineto
647.03125 407.203125 lineto
647.03125 375.5625 lineto
604.84375 375.5625 lineto
0.000 0.000 1.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
623.84375 392.5625 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
613.28125 843.84375 moveto
613.28125 875.484375 lineto
655.46875 875.484375 lineto
655.46875 843.84375 lineto
613.28125 843.84375 lineto
0.000 0.000 1.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
632.28125 860.84375 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
609.0625 746.8125 moveto
609.0625 778.453125 lineto
651.25 778.453125 lineto
651.25 746.8125 lineto
609.0625 746.8125 lineto
0.000 0.000 1.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
628.0625 763.8125 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
533.125 759.46875 moveto
533.125 791.109375 lineto
575.3125 791.109375 lineto
575.3125 759.46875 lineto
533.125 759.46875 lineto
0.000 0.000 1.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
552.125 776.46875 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
524.6875 822.75 moveto
524.6875 856.5 lineto
558.4375 856.5 lineto
558.4375 822.75 lineto
524.6875 822.75 lineto
1.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
541.6875 839.75 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
448.75 468.375 moveto
448.75 502.125 lineto
482.5 502.125 lineto
482.5 468.375 lineto
448.75 468.375 lineto
1.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
465.75 485.375 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
554.21875 902.90625 moveto
554.21875 936.65625 lineto
587.96875 936.65625 lineto
587.96875 902.90625 lineto
554.21875 902.90625 lineto
1.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
571.21875 919.90625 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
693.4375 573.84375 moveto
693.4375 607.59375 lineto
727.1875 607.59375 lineto
727.1875 573.84375 lineto
693.4375 573.84375 lineto
1.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
710.4375 590.84375 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
457.1875 670.875 moveto
457.1875 704.625 lineto
490.9375 704.625 lineto
490.9375 670.875 lineto
457.1875 670.875 lineto
1.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
474.1875 687.875 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
625.9375 476.8125 moveto
625.9375 510.5625 lineto
659.6875 510.5625 lineto
659.6875 476.8125 lineto
625.9375 476.8125 lineto
1.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
642.9375 493.8125 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
592.1875 797.4375 moveto
592.1875 831.1875 lineto
625.9375 831.1875 lineto
625.9375 797.4375 lineto
592.1875 797.4375 lineto
1.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
609.1875 814.4375 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
503.59375 506.34375 moveto
503.59375 540.09375 lineto
537.34375 540.09375 lineto
537.34375 506.34375 lineto
503.59375 506.34375 lineto
1.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
520.59375 523.34375 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
642.8125 426.1875 moveto
642.8125 459.9375 lineto
676.5625 459.9375 lineto
676.5625 426.1875 lineto
642.8125 426.1875 lineto
1.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
659.8125 443.1875 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
668.125 510.5625 moveto
668.125 544.3125 lineto
701.875 544.3125 lineto
701.875 510.5625 lineto
668.125 510.5625 lineto
1.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
685.125 527.5625 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
587.96875 611.8125 moveto
587.96875 645.5625 lineto
621.71875 645.5625 lineto
621.71875 611.8125 lineto
587.96875 611.8125 lineto
1.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
604.96875 628.8125 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
528.90625 367.125 moveto
528.90625 400.875 lineto
562.65625 400.875 lineto
562.65625 367.125 lineto
528.90625 367.125 lineto
1.000 0.000 0.000 setrgbcolor AdjustColor
eofill
grestore
gsave
/Helvetica findfont 8 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
545.90625 384.125 [
[(score)]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
/Helvetica findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
20 984 [
[(Prijsverbetering = 7,784,583.00 euro)]
] 18 -0 0.5 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
